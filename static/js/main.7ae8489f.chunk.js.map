{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","hoc/withAuthRedirect.js","components/UsersContainer/users.module.css","assets/images/user.png","assets/images/preloader2.gif","components/Navbar/Navbar.module.css","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","utils/Paginator/Paginator.jsx","components/UsersContainer/User.jsx","components/UsersContainer/Users.jsx","redux/users-selectors.js","components/UsersContainer/UsersContainer.jsx","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","redux/auth-reducer.js","FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","utils/validators/validators.js","FormsControls/FormsControls.module.css","utils/Paginator/Paginator.module.css","components/Login/Login.jsx","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","userId","post","unfollowUser","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","count","filter","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","Header","className","s","header","src","loginBlock","onClick","HeaderContainer","Navbar","nav","item","active","activeClassName","href","News","Music","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","photos","small","userPhoto","style","disabled","some","Users","createSelector","getTotalUsersCount","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Preloader","bind","page","totalCount","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","component","Login","AppContainer","withRouter","promise","getAuthUserData","Promise","all","SamuraiJSApp","basename","process","Boolean","location","hostname","match","unregister","navigator","serviceWorker","ready","registration","ReactDOM","document","getElementById","SET_USER_DATA","setAuthUserData","payload","length","stopSubmit","_error","FormControl","input","meta","touched","error","children","hasErrors","formControl","Input","restProps","child","Textarea","createField","placeholder","validators","text","validate","preloader","required","value","maxLengthCreator","maxLenght","maxLenght20","LoginReduxForm","reduxForm","handleSubmit","onSubmit","formSummaryError","formData","posts","likesCounter","newPostText","profile","actionCreatorAddPost","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.7ae8489f.chunk.js","sourcesContent":["import * as axios from 'axios'; \r\nimport Login from '../components/Login/Login';\r\n\r\nconst instance = axios.create(\r\n    {withCredentials:true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {'API-KEY':'9aa0b454-6ceb-4bde-96c6-c40c83a0a7db'}\r\n}\r\n)\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}\r\n            `).then(response => {\r\n                return response.data\r\n            })\r\n            \r\n    }, \r\n    followUser(userId) {\r\n        return instance.post(`follow/${userId}`,{}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    getProfile(userId) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/'+ userId)\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status:status})\r\n    },\r\n\r\n    getProfile(userId) {\r\n        return instance.get(`profile/`+userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email,password,rememberMe) {\r\n        return instance.post('auth/login',{email,password,rememberMe})\r\n    },\r\n\r\n    logout(){\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    \r\n                dialogs: [\r\n                    {id: 1, name:'Dimych'},\r\n                    {id: 2, name:'Alex'},\r\n                    {id: 3, name:'Nadia'},\r\n                    {id: 4, name:'Anton'},\r\n                    {id: 5, name:'Misha'}\r\n                ],\r\n            \r\n                 messages: [\r\n                        {id: 1, message:'Hi'},\r\n                        {id: 2, message:'What about your project'},\r\n                        {id: 3, message:'Yo'}\r\n             ],\r\n            \r\n                \r\n}\r\n\r\n\r\nconst dialogsReducer =(state=initialState,action) => {\r\n    switch (action.type) {\r\n            \r\n        case  SEND_MESSAGE : \r\n        let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages,{id:6, message: body }],\r\n                \r\n            };\r\n\r\n        default :\r\n                return state;\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)  return <Redirect to='/login' />\r\n            return <Component {...this.props} />   \r\n        }\r\n        \r\n    } \r\n\r\nlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\nreturn ConnectedAuthRedirectComponent;\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2Txyg\"};","module.exports = __webpack_public_path__ + \"static/media/user.492e6dff.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader2.a0e82bdc.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3bEpq\",\"item\":\"Navbar_item__2ScAf\",\"active\":\"Navbar_active__3RGTW\"};","\r\nlet initialState = {}\r\n\r\n\r\n\r\nconst sidebarReducer =(state=initialState,action) => {\r\n\r\n\r\n                return state;\r\n\r\n   \r\n   \r\n    \r\n}\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps ) => {\r\n    return items.map(u => \r\n        {\r\n            if (u[objPropName] === itemId){\r\n                return{...u,...newObjProps}\r\n            }\r\n            return u;\r\n        }\r\n        )\r\n}\r\n\r\n\r\n","import {usersAPI} from \"../api/api\"\r\nimport {updateObjectInArray} from \"../utils/object-helpers\"\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount : 0,\r\n    pageSize : 10,\r\n    currentPage:1,\r\n    isFetching: true,\r\n    followingInProgress : [],\r\n    fake: 10\r\n\r\n}\r\n\r\n\r\nconst usersReducer =(state=initialState,action) => {\r\n    switch (action.type) {\r\n        \r\n        case  FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\",{followed: true})\r\n                \r\n                /*state.users.map(u => \r\n                    {\r\n                        if (u.id === action.userId){\r\n                            return{...u,followed: true}\r\n                        }\r\n                        return u;\r\n                    }\r\n                    )*/\r\n            }\r\n        case  UNFOLLOW : \r\n        return {\r\n            ...state,\r\n        users: updateObjectInArray(state.users,action.userId,\"id\",{followed: false})\r\n        } \r\n           \r\n            case SET_USERS :\r\n               return {\r\n                   ...state,\r\n                   users: action.users\r\n               }\r\n\r\n            case SET_CURRENT_PAGE :\r\n                return {\r\n                    ...state, currentPage: action.currentPage\r\n                }\r\n\r\n            case SET_TOTAL_USERS_COUNT :\r\n                return {\r\n                    ...state, totalUsersCount: action.count\r\n                }\r\n            case TOGGLE_IS_FETCHING :\r\n                return {\r\n                    ...state, isFetching: action.isFetching\r\n                }\r\n            case TOGGLE_IS_FOLLOWING_PROGRESS: \r\n                return {\r\n                    ...state,\r\n                    followingInProgress : action.isFetching\r\n                       ? [...state.followingInProgress,action.userId]\r\n                        : state.followingInProgress.filter(id => id != action.userId )\r\n                    \r\n                }\r\n        default :\r\n                return state;\r\n\r\n    }\r\n    \r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({type:SET_USERS,users});\r\nexport const setCurrentPage = (currentPage) => ({type:SET_CURRENT_PAGE,currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type:SET_TOTAL_USERS_COUNT,count:totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING , isFetching });\r\nexport const toggleFollowingProgress = (isFetching,userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS,isFetching,userId })\r\n\r\nexport const requestUsers = (page,pageSize) => {\r\n    return (dispatch)=> {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page,pageSize).then(data => {\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        \r\n    }); }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch,userId,apiMethod,actionCreator) => {\r\n        dispatch(toggleFollowingProgress(true,userId));\r\n                            let data = await apiMethod(userId)\r\n                                if (data.resultCode == 0) {\r\n                                    dispatch(actionCreator(userId))\r\n                                }\r\n                                dispatch(toggleFollowingProgress(false,userId));\r\n    \r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return  async(dispatch) => {\r\n        \r\n        followUnfollowFlow(dispatch,userId,usersAPI.unfollowUser.bind(usersAPI),unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n      \r\n        followUnfollowFlow(dispatch,userId,usersAPI.followUser.bind(usersAPI),followSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from '../api/api'\r\nimport { stopSubmit } from 'redux-form';\r\nimport {getAuthUserData} from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized:false\r\n}\r\n\r\nconst appReducer =(state=initialState,action) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case INITIALIZED_SUCCESS: {\r\n          return {\r\n            \r\n            ...state, initialized:true\r\n          }\r\n        }\r\n        default :\r\n                return state;\r\n    }\r\n}\r\n  \r\n  export const initializeSuccess = () => ({type : INITIALIZED_SUCCESS});\r\n\r\n  export const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n      Promise.all([promise]).then(() => {\r\n        dispatch(initializeSuccess())\r\n      }); \r\n  }\r\n\r\n \r\n\r\n\r\nexport default appReducer;","import { combineReducers, createStore, applyMiddleware,compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage : dialogsReducer,\r\n    sidebar : sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n\r\n\r\nwindow._store_ = store;\r\n\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from'./Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='http://dietkremlin.ru/img/logo0601.png'></img>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n            <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n            : <NavLink to='/login'>Login</NavLink>\r\n            }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n    } \r\n\r\n\r\n    render() {\r\n       return <Header {...this.props} />\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps =(state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    \r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n  \r\n \r\n  \r\n  return <nav className={s.nav}>\r\n    <div className={`${s.item} ${s.active}`}>\r\n      <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink  to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink  to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to=\"/music\">Music</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <a href=\"/settings\">Settings</a>\r\n    </div>\r\n    <div>\r\n    \r\n  \r\n    </div>\r\n    \r\n \r\n    \r\n  </nav>\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './News.module.css'; \r\n\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css'; \r\n\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({totalItemsCount,pageSize,currentPage,onPageChanged,portionSize=10}) => {\r\n\r\nlet pagesCount = Math.ceil(totalItemsCount/pageSize);\r\nlet pages = [];\r\nfor (let i=1;i<=pagesCount;i++) {\r\n     pages.push(i);\r\n}\r\n\r\nlet portionCount = Math.ceil(pagesCount/portionSize);\r\nlet [portionNumber,setPortionNumber] = useState(1);\r\nlet leftPortionPageNumber = (portionNumber-1)*portionSize + 1;\r\nlet rightPortionPageNumber = portionNumber*portionSize;\r\n\r\nreturn <div className={styles.paginator}>\r\n{portionNumber>1 &&\r\n        <button onClick={ ()=>{setPortionNumber(portionNumber-1)} } >PREV</button>\r\n}\r\n\r\n{pages.filter(p => p>=leftPortionPageNumber && p<=rightPortionPageNumber).map((p) => {\r\n        return <span className={ cn({[styles.selectedPage]:currentPage === p}, styles.pageNumber)} key ={p}\r\n        onClick={(e) => {onPageChanged(p)}}>{p}</span>\r\n})}\r\n\r\n{portionCount>portionNumber && \r\n<button onClick={ () => {setPortionNumber(portionNumber+1)}}>NEXT</button>}\r\n\r\n</div>\r\n\r\n   }\r\n\r\n     export default Paginator;","import React from 'react';\r\nimport style from './users.module.css';\r\nimport userPhoto from './../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow}) => {\r\n   \r\n        return (<div>\r\n        <div>\r\n            <span>\r\n                <NavLink to={'/profile/'+ user.id}>\r\n                <div>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={style.userPhoto} />\r\n                </div>\r\n                </NavLink>\r\n                <div>\r\n                    {user.followed ?\r\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { \r\n                            unfollow(user.id);\r\n                             }}>Unfollow</button> :\r\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id)\r\n        \r\n        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div> {user.name} </div>\r\n                    <div> {user.status} </div>\r\n                </span>\r\n                <span>\r\n                    <div> \"user.location.country\" </div>\r\n                    <div> \"user.location.city\" </div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n        </div>\r\n        )\r\n\r\n    }\r\n       \r\n\r\n\r\n\r\nexport default User;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Paginator from '../../utils/Paginator/Paginator'\r\nimport User from './User'\r\n\r\n\r\n\r\n\r\n\r\nlet Users = ({totalItemsCount,pageSize,currentPage,onPageChanged,users, ...props}) => {\r\n   \r\n        return <div>\r\n        \r\n            <Paginator totalItemsCount={totalItemsCount} pageSize={pageSize} \r\n            currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n\r\n        {users.map(u => <User key={u.id}\r\n                        user={u}\r\n                        followingInProgress={props.followingInProgress}\r\n                        unfollow ={props.unfollow}\r\n                        follow={props.follow} />\r\n       \r\n        )} </div>}\r\n\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createSelector } from \"reselect\"\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n} \r\n\r\nexport const getUsers = createSelector( getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n} )\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {follow,unfollow,requestUsers,setCurrentPage,toggleFollowingProgress} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\nimport {getUsers,getTotalUsersCount,getCurrentPage,getIsFetching,getFollowingInProgress,getPageSize} from '../../redux/users-selectors'\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    \r\n    componentDidMount() {\r\n       // this.props.requestUsers(this.props.currentPage,this.props.pageSize)\r\n        const {currentPage,pageSize} = this.props\r\n        this.props.requestUsers(currentPage,pageSize)\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        //this.props.requestUsers(pageNumber,this.props.pageSize);\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber,pageSize);\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() { \r\n       \r\n        debugger\r\n      return <>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n      <Users totalItemsCount ={this.props.totalItemsCount}\r\n                    pageSize = {this.props.pageSize}\r\n                    currentPage = {this.props.currentPage}\r\n                    onPageChanged = {this.onPageChanged}\r\n                    follow = {this.props.follow} \r\n                    unfollow = {this.props.unfollow}\r\n                    users = {this.props.users}\r\n                    toggleFollowingProgress = {this.props.toggleFollowingProgress}\r\n                    followingInProgress = {this.props.followingInProgress}\r\n\r\n      />\r\n      </>\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps =(state) => {\r\n    \r\n    return { \r\n        users: getUsers(state),\r\n        totalItemsCount:getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching : getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { \r\n        setCurrentPage,\r\n        unfollow,\r\n        follow,\r\n        toggleFollowingProgress,\r\n        requestUsers\r\n    })\r\n)(UsersContainer);\r\n\r\n ","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader'\r\n\r\nexport const withSuspense = (Component) => {\r\nreturn (props) =>{\r\nreturn <React.Suspense fallback={<Preloader/>}> \r\n       <Component {...props} />\r\n       </React.Suspense>\r\n}\r\n}","import React, { Component } from 'react';\r\nimport {Route, withRouter,BrowserRouter } from 'react-router-dom';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport UsersContainer from './components/UsersContainer/UsersContainer';\r\nimport Login from './components/Login/Login';\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport {initializeApp} from './redux/app-reducer'\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/redux-store'\r\nimport {withSuspense} from './hoc/withSuspense'\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n     this.props.initializeApp(); \r\n} \r\n\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader/>\r\n     }\r\n    return(\r\n    <div className=\"app-wrapper\">\r\n      <HeaderContainer />\r\n      <Navbar />\r\n      <div className=\"app-wrapper-content\">\r\n  <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} /> \r\n      <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n      <Route path='/users' render={() =><UsersContainer />}/>\r\n      <Route path='/news'component={News} />\r\n      <Route path='/music'component={Music} />\r\n      <Route path='/login' render ={()=><Login/>} />\r\n      </div>\r\n    </div>)\r\n \r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n \r\n  initialized: state.app.initialized\r\n  \r\n})\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\nconnect(mapStateToProps,{initializeApp}))(App)\r\n\r\nconst SamuraiJSApp = (props) => {\r\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n  <Provider store = {store}><AppContainer /></Provider>\r\n  </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n/*setInterval( () => {\r\n    store.dispatch({type: \"FAKE\"})\r\n})*/\r\n\r\n\r\n\r\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {authAPI} from '../api/api'\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth:false\r\n}\r\n\r\nconst authReducer =(state=initialState,action) => {\r\n    \r\n    switch (action.type) {\r\n        \r\n        case SET_USER_DATA: {\r\n          return {\r\n            \r\n            ...state, ...action.payload\r\n          }\r\n        }\r\n        default :\r\n                return state;\r\n    }\r\n}\r\n  \r\n  export const setAuthUserData = (userId, login, email,isAuth) => ({type : SET_USER_DATA, payload : {userId, login, email,isAuth}});\r\n\r\n  export const getAuthUserData = () => async (dispatch) => {\r\n      let response = await authAPI.me()\r\n        if ((response.data.resultCode) === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            \r\n        dispatch(setAuthUserData(id, login, email,true))\r\n       \r\n    }\r\n    ; \r\n    \r\n  }\r\n\r\n  export const login = (email,password,rememberMe) => async(dispatch) => {\r\n      let response = await authAPI.login(email,password,rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(getAuthUserData());\r\n        } else {\r\n          let message = response.data.messages.length>0 ? response.data.messages[0]: \"Some error\"\r\n          dispatch(stopSubmit(\"login\",{_error:message}))\r\n        }\r\n    }\r\n  \r\n \r\n  export const logout = (email,password,rememberMe) => async (dispatch) => {\r\n      let response = await authAPI.logout(email,password,rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(setAuthUserData(null,null,null,false));\r\n        }\r\n    }\r\n  \r\n\r\n\r\nexport default authReducer;","import React from 'react'\r\nimport styles from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\"\r\nimport {required} from \"../utils/validators/validators\"\r\n\r\n\r\n\r\nexport const FormControl = ({input,meta:{touched,error},children}) => {\r\n    const hasErrors = error&&touched\r\n    return <div className={styles.formControl+\" \"+(hasErrors?styles.error:'')}>\r\n    <div>\r\n    {children}\r\n    </div>\r\n   {hasErrors&&<span>{error}</span>}\r\n    </div> \r\n\r\n}\r\n\r\nexport const Input = (props) => {\r\n   const {input,meta,child, ...restProps} = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input,meta,child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n }\r\n\r\n export const createField = (placeholder,name,validators,component,props={}, text=\"\") => (\r\n     <div> \r\n         <Field placeholder={placeholder} name={name} validate={validators} component={component} \r\n         {...props}\r\n         /> {text}\r\n         </div>\r\n )","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader2.gif';\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","\r\n\r\nexport const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const  maxLengthCreator = (maxLenght) => \r\n    (value) => {\r\n        if (value.length > maxLenght) return `Max length is ${maxLenght} symbol `;\r\n        return undefined;\r\n    }\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__8Bx3C\",\"error\":\"FormsControls_error__3kndO\",\"formSummaryError\":\"FormsControls_formSummaryError__Y6NO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__3CnPj\",\"selectedPage\":\"Paginator_selectedPage__ZRefm\",\"paginator\":\"Paginator_paginator__1Sra_\"};","import React from \"react\"\r\nimport { reduxForm, Field } from \"redux-form\"\r\nimport {Input,createField} from '../../FormsControls/FormsControls'\r\nimport { required,maxLengthCreator } from \"../../utils/validators/validators\"\r\nimport { connect } from \"react-redux\"\r\nimport {login} from \"../../redux/auth-reducer\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport style from \"../../FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst maxLenght20 = maxLengthCreator(20)\r\n\r\nconst LoginPage = ({handleSubmit,error}) => {\r\n    \r\n    return (\r\n    <form onSubmit={handleSubmit}>\r\n     <div>\r\n     {createField(\"Email\", \"email\",[required,maxLenght20], Input )}\r\n     {createField(\"Password\", \"password\", [required], Input, {type: \"password\"} )}\r\n     {createField(null, \"rememberMe\",[], Input, {type: \"checkbox\"}, \"remember me\" )}\r\n\r\n        <div> <button>Login</button>  </div>\r\n        {error&&<div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n    </div>\r\n    </form>\r\n)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n}) (LoginPage)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);  \r\n    }\r\n\r\n    if (props.isAuth) return <Redirect to={\"/profile\"} />\r\n\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm  onSubmit={onSubmit}/></div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n }\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Ilt6t\",\"loginBlock\":\"Header_loginBlock__1FQ7c\"};","import {usersAPI,profileAPI} from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nlet initialState = {\r\n    \r\n        posts : [\r\n            {id: 1, name:'Hi, how are you?',   likesCounter: '325'},\r\n            {id: 2, name:\"It's my first post\", likesCounter: '47'},\r\n            {id: 3, name:\"I work succsesfully\", likesCounter: '27'},\r\n            {id: 4, name:\"I'm here\", likesCounter: '45'}\r\n          ],\r\n          newPostText : 'it-kamasutra',\r\n          profile: null,\r\n          status:\"\"\r\n}\r\n\r\nconst profileReducer =(state=initialState,action) => {\r\n    \r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n                let newPost = {\r\n                    id: 2,\r\n                    name:action.newPostText,\r\n                    likesCounter: 2\r\n                }\r\n                return {\r\n                  ...state,\r\n                  posts:[...state.posts, newPost],\r\n                  newPostText: ''\r\n                }\r\n               \r\n              }\r\n\r\n        case SET_USER_PROFILE: {\r\n          return {\r\n            ...state, profile:action.profile\r\n          }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n          return {\r\n            ...state,status:action.status\r\n          }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n          return {\r\n            ...state,posts: state.posts.filter(p => p.id != action.postId)\r\n          }\r\n        }\r\n        default :\r\n                return state;\r\n    }\r\n}\r\nexport const  actionCreatorAddPost = (newPostText) => ({type : ADD_POST,newPostText});\r\n  \r\n  export const setUserProfile = (profile) => ({type : SET_USER_PROFILE, profile});\r\n  export const setStatus = (status) => ({type : SET_STATUS, status:status});\r\n  export const deletePost = (postId) => ({type: DELETE_POST, postId })\r\n\r\n  export const getUserProfile = (userId) => async (dispatch) => {\r\n        const response = await usersAPI.getProfile(userId)\r\n            dispatch(setUserProfile(response.data));\r\n    }\r\n  \r\n\r\n  export const getStatus = (userId) => async (dispatch) => {\r\n      const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n    }\r\n  \r\n\r\n  export const updateStatus = (status) => async (dispatch) => {\r\n      const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(setStatus(status))\r\n        }\r\n    }\r\n  \r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}